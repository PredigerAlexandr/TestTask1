// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask1.Models.Database;

namespace TestTask1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220916083000_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestTask1.Models.Database.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TcId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TcId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TestTask1.Models.Database.TC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CoefficientOfKilogram")
                        .HasColumnType("float");

                    b.Property<double>("CoefficientOfKilometer")
                        .HasColumnType("float");

                    b.Property<double>("CoefficientOfSize")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transport_companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoefficientOfKilogram = 7.0,
                            CoefficientOfKilometer = 1.5,
                            CoefficientOfSize = 7.0,
                            Name = "Энергия"
                        },
                        new
                        {
                            Id = 2,
                            CoefficientOfKilogram = 1.5,
                            CoefficientOfKilometer = 7.0,
                            CoefficientOfSize = 7.0,
                            Name = "СДЭК"
                        },
                        new
                        {
                            Id = 3,
                            CoefficientOfKilogram = 7.0,
                            CoefficientOfKilometer = 7.0,
                            CoefficientOfSize = 1.5,
                            Name = "ПЭК"
                        });
                });

            modelBuilder.Entity("TestTask1.Models.Database.Order", b =>
                {
                    b.HasOne("TestTask1.Models.Database.TC", "Tc")
                        .WithMany("orders")
                        .HasForeignKey("TcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
